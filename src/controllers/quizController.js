const QuizModel = require('../models/quizModel');

class QuizController {
    // Renderizar p√°gina do quiz com sistema de n√≠veis
    static async renderQuiz(req, res) {
        try {
            console.log('=== RENDERIZANDO QUIZ ===');
            const nivel = parseInt(req.query.nivel) || 1; // n√≠vel atual (1, 2, 3)
            const posicao = parseInt(req.query.p) || 1; // posi√ß√£o da pergunta no n√≠vel
            
            console.log(`N√≠vel: ${nivel}, Posi√ß√£o: ${posicao}`);
            
            const perguntasDoNivel = await QuizModel.buscarPerguntasPorNivel(nivel);
            console.log(`Perguntas encontradas para n√≠vel ${nivel}:`, perguntasDoNivel.length);
            
            const totalPerguntasNivel = perguntasDoNivel.length;
            
            if (totalPerguntasNivel === 0) {
                console.log('Nenhuma pergunta encontrada, redirecionando...');
                return res.redirect('/quiz?nivel=1&p=1');
            }
            
            // Se passou da √∫ltima pergunta do n√≠vel, mostrar parab√©ns e avan√ßar n√≠vel
            if (posicao > totalPerguntasNivel) {
                if (nivel === 1) {
                    // Concluiu n√≠vel 1, mostrar parab√©ns n√≠vel 2
                    return res.render('quiz', {
                        pergunta: null,
                        posicaoAtual: posicao,
                        totalPerguntas: totalPerguntasNivel,
                        nivel: nivel,
                        mostrarParabens: 'nivel2',
                        proximoNivel: 2,
                        title: 'Parab√©ns - N√≠vel 2'
                    });
                } else if (nivel === 2) {
                    // Concluiu n√≠vel 2, mostrar parab√©ns n√≠vel 3
                    return res.render('quiz', {
                        pergunta: null,
                        posicaoAtual: posicao,
                        totalPerguntas: totalPerguntasNivel,
                        nivel: nivel,
                        mostrarParabens: 'nivel3',
                        proximoNivel: 3,
                        title: 'Parab√©ns - N√≠vel 3'
                    });
                } else {
                    // Concluiu todos os n√≠veis
                    return res.redirect('/parabensFinal');
                }
            }
            
            const perguntaAtual = perguntasDoNivel[posicao - 1];
            
            if (!perguntaAtual) {
                console.log('Pergunta n√£o encontrada na posi√ß√£o:', posicao);
                return res.redirect(`/quiz?nivel=${nivel}&p=1`);
            }
            
            console.log('Renderizando pergunta:', perguntaAtual.titulo);
            
            res.render('quiz', {
                pergunta: perguntaAtual,
                posicaoAtual: posicao,
                totalPerguntas: totalPerguntasNivel,
                nivel: nivel,
                mostrarParabens: null,
                proximoNivel: null,
                title: `Quiz N√≠vel ${nivel} - Pergunta ${posicao}`
            });
        } catch (error) {
            console.error('=== ERRO NO QUIZ ===');
            console.error('Erro ao carregar quiz:', error);
            res.status(500).render('404', {
                title: 'Erro',
                message: 'Erro ao carregar o quiz: ' + error.message
            });
        }
    }

    // Verificar resposta via AJAX
    static async verificarResposta(req, res) {
        try {
            console.log('=== VERIFICAR RESPOSTA ===');
            console.log('Body recebido:', req.body);
            
            const { respostaId } = req.body;
            
            if (!respostaId) {
                console.log('Resposta n√£o fornecida');
                return res.json({ success: false, message: 'Resposta n√£o fornecida' });
            }
            
            console.log('Verificando resposta ID:', respostaId);
            
            const resultado = await QuizModel.verificarResposta(respostaId);
            
            console.log('Resultado da verifica√ß√£o:', resultado);
            
            if (!resultado.valida) {
                return res.json({ success: false, message: 'Resposta inv√°lida' });
            }
            
            const response = {
                success: true,
                correta: resultado.correta,
                message: resultado.correta ? 'Resposta correta! üéâ' : 'Resposta incorreta! üòÖ'
            };
            
            console.log('Enviando resposta:', response);
            
            res.json(response);
        } catch (error) {
            console.error('=== ERRO NA VERIFICA√á√ÉO ===');
            console.error('Erro ao verificar resposta:', error);
            res.json({ success: false, message: 'Erro interno' });
        }
    }
}

module.exports = QuizController;